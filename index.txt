1. SOBHA S:
       Array.prototype.fill()
             The fill() method fills the elements with the given value.It used to overwrites the original array.
             syntax: arr.fill(value,start,end)
             from the syntax, start means the starting index from where the array is to be filled with the given value.
             End means the index upto which array is to be filled with the given value.
             eg: arr=[1,2,3,4,5,6,7,8]
                if the commend is arr.fill(0), the output will be arr=[0,0,0,0,0,0,0,0].
                if the commend is arr.file(0,3), the outout will be arr=[1,2,3,4,0,0,0,0].
                if the commend is arr.file(0,3,6), the output will be arr=[1,2,3,4,0,0,0,8].
       Array.prototype.entries()
              The Array.entries() method  is  used to get a new Array that contains the key and value pairs for each index of an array. 
              Syntax:array.entries()
      Array.prototype.every()
              Array.every() method checks the all elements in the array satisfy the condition or not.
              If the whole elementsof the arrat satisfies the condition the output willbe "TRUE",otherwis it will be "FALSE"
       Array.prototype.filter()
              Array filter() Method creates a new array from a given array consisting of only those elements from the given array,
              which satisfy a condition. 
               Syntax: array.filter(callback(element, index, arr), thisValue)
        Array.prototype.find()
              Array.find() method  is used to get the value of the first element in the array that satisfies the given condition. 
              It checks all the elements of the array and whichever the first element satisfies the condition is going to print.
               This function will not work function having the empty array elements, and also does not change the original array.
               Syntax:array.find(function(currentValue, index, arr),thisValue).
2.THIRKSHA RAJMA B.V
       Array.prototype.entries()
             The entries() method returns a new array iterator object that contains the key or value pairs for each index in the array.
             example: 
                var arr=['a', 'b', 'c'];
                var eArr=arr.entries();
                console.log(eArr.next().value); //output : Array[0, 'a']
                console.log(eArr.next().value); //output : Array[1, 'b']
                console.log(eArr.next().value); //output : Array[2, 'c']
       Array.prototype.fill()
             The fill() method changes all elements in an array to a static value, from a start index(default 0) to an 
             end index(default array.length). It returns the modified array.
             example:
                let arrar=[1, 2, 3, 4];
                console.log(array.fill(0, 2, 4)); // output : [1, 2, 0, 0]
                console.log(array.fill(5, 1)); // output : [1, 5, 5, 5]
                console.log(array.fill(6)); // output : [6, 6, 6, 6]
       Array.prototype.every()
             The every() method checks if all the array elements pass the given test function.It returns a boolean value.
             example:
                //function check whether the age is 18 or above
                function checkAdult(age) {
                     return age >= 18;
                }
                const ageArray=[34, 23, 12, 20, 26];
                //check if all the array elements pass the function
                let check=ageArray.every(checkAdult);  //output : false
       Array.prototype.filter()
       Array.prototype.find()
3. FARZANA FATHIMA .A
       Array.prototype.every()
              The every() method tests whether all elements in the array pass the test implemented by the provided function.
               It returns a Boolean value.
               example:const isBelowThreshold = (currentValue) => currentValue < 40;
                       const array1 = [1, 30, 39, 29, 10, 13];
                       console.log(array1.every(isBelowThreshold))
                       output:true
        Array.prototype.fill()
                      The fill() method changes all elements in an array to a static value, from a start index (default 0) to 
                      an end index (default array.length). It returns the modified array.
                      example:const array1 = [1, 2, 3, 4];
                              console.log(array1.fill(0, 2, 4));
                              output: Array [1, 2, 0, 0]
       Array.prototype.entries()
                     The entries() method returns a new Array Iterator object that contains the key/value pairs for each index in the array.
                     example:const array1 = ['a', 'b', 'c'];
                              const iterator1 = array1.entries();
                               console.log(iterator1.next().value);
                               output:Array [0, "a"]
       Array.prototype.find()
                     The find() method returns the first element in the provided array that satisfies the provided testing function. If no 
                     values satisfy the testing function, undefined is returned.
                     example:const array1 = [5, 12, 8, 130, 44];
                             const found = array1.find(element => element > 10);
                             console.log(found);
                             output:12
       Array.prototype.filter()
                     The filter() method creates a shallow copy of a portion of a given array, filtered down to just the elements from the 
                     given array that pass the test implemented by the provided function.
                      example:const words = ['spray', 'limit', 'elite', 'exuberant', 'destruction', 'present'];
                      const result = words.filter(word => word.length > 6);
                      console.log(result);
                      output: Array ["exuberant", "destruction", "present"]
4.CHRIS HANSHIA .C
       Array.prototype.filter()
          
          The filter() method creates a shallow copy of a portion of a given array, filtered down to just the elements from the given array that pass the test implemented by the provided function.
          example-->
          const words = ['mango', 'strawberry', 'papaya', 'kiwi', 'jackfruit', 'apple'];
          const result = words.filter(word => word.length > 6);
          console.log(result);
          // Expected output: Array ["strawberry", "jackfruit"]

       Array.prototype.fill()
         
         The fill() method changes all elements in an array to a static value, from a start index to an end index .
         example-->
         const array1 = [1, 2, 3, 4];
         // Fill with 0 from position 2 until position 4
         console.log(array1.fill(0, 2, 4));
         // Expected output: Array [1, 2, 0, 0]
         // Fill with 5 from position 1
         console.log(array1.fill(5, 1));
         // Expected output: Array [1, 5, 5, 5]

       Array.prototype.entries()

        The entries() method returns a new Array Iterator object that contains the key/value pairs for each index in the array.
         example-->
         const a = ["a", "b", "c"];
         for (const [index, element] of a.entries()) {
              console.log(index, element);
              }
              // Expected output:  0 'a'
              // Expected output:  1 'b'
              // Expected output:  2 'c'
          

       Array.prototype.every()

       The every() method tests whether all elements in the array pass the test implemented by the provided function. It returns a Boolean value.
        example-->
        const isBelowThreshold = (currentValue) => currentValue < 40;
        const array1 = [1, 30, 39, 29, 10, 13];
        console.log(array1.every(isBelowThreshold));
        // Expected output: true

       Array.prototype.find()

         The find() method returns the first element in the provided array that satisfies the provided testing function. If no values satisfy the testing function, undefined is returned.
         example-->
         const inventory = [
              { name: "apples", quantity: 2 },
              { name: "bananas", quantity: 0 },
              { name: "cherries", quantity: 5 },
              ];
              function isCherries(fruit) {
                     return fruit.name === "cherries";
                     }
                     console.log(inventory.find(isCherries));
                     //Expected output: { name: 'cherries', quantity: 5 }

5.VIJAYA. R
       Array.prototype.find()
       Array.prototype.fill()
       Array.prototype.entries()
       Array.prototype.every()
       Array.prototype.filter()
